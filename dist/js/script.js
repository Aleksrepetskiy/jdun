"use strict";window.addEventListener("DOMContentLoaded",function(){function t(){$(".popup").removeClass("active"),$("body").off("click")}document.addEventListener("keydown",function(e){"Escape"===e.code&&t()}),$(".js-open").on("click",function(e){e.preventDefault();e=$(this).data("attr");t(),$(e).addClass("active")}),$(".js-close").on("click",function(e){e.preventDefault(),t()}),$(window).resize(function(){767<$(window).width()&&($(".menu__item").removeClass("opened"),$(".menu__box").removeClass("active"),$(".sub-menu__list").attr("style",""),$("html").removeClass("html-over"))}),$(".hamburger").on("click",function(e){e.preventDefault(),$(this).closest(".menu").find(".menu__box").addClass("active"),$("html").addClass("html-over")}),$(".menu__close").on("click",function(e){e.preventDefault(),$(this).closest(".menu__box").removeClass("active"),$("html").removeClass("html-over")}),$(".popup").on("click",function(e){$("body").on("click",function(){e.target.classList.contains("popup")&&t()})}),$(".js-more").on("click",function(e){e.preventDefault(),$(this).closest(".js-show").find(".about__container").removeClass("active"),$(this).hide()}),$(".faq__header").on("click",function(e){e.preventDefault();var e=$(this),t=e.closest(".faq__item");list=e.closest(".faq__list"),items=list.find(".faq__item"),content=t.find(".faq__dropdown"),otherContent=list.find(".faq__dropdown"),duration=300,t.hasClass("active")?t.stop(!0,!0).removeClass("active"):(items.removeClass("active"),t.addClass("active"))});var e=$(".up");$(window).scroll(function(){200<$(this).scrollTop()?e.fadeIn():e.fadeOut()}),e.on("click",function(){$("html, body").animate({scrollTop:0},1500)});try{var n=document.querySelector(".read-more__content"),i=document.querySelector(".read-more__btn"),o=document.querySelector(".read-more__btn-box");i&&i.addEventListener("click",function(e){e.preventDefault(),o.remove(),n.classList.remove("read-more__hide")})}catch(e){}try{var s=document.querySelectorAll(".index-news__tab-content"),a=document.querySelector(".index-news__tabs"),r=a.querySelectorAll(".index-news__tab");a.addEventListener("click",function(e){var n=e.target;n.classList.contains("index-news__tab")&&r.forEach(function(e,t){e==n&&(s.forEach(function(e){e.classList.add("hide"),e.classList.remove("show","fade")}),r.forEach(function(e){e.classList.remove("active")}),function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;s[e].classList.add("show","fade"),s[e].classList.remove("hide"),r[e].classList.add("active")}(t))})})}catch(e){}try{new Swiper(".main-swiper",{loop:!0,autoplay:{delay:5e3,disableOnInteraction:!0,pauseOnMouseEnter:!0},pagination:{el:".swiper-pagination",clickable:!0},keyboard:{enabled:!0},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}}),new Swiper(".table-swiper",{loop:!1,spaceBetween:30,keyboard:{enabled:!0},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},breakpoints:{499:{slidesPerView:1,spaceBetweenSlides:50},999:{navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}}}}),new Swiper(".materials-swiper",{slidesPerView:3,spaceBetween:20,loop:!0,keyboard:{enabled:!0},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},pagination:{el:".swiper-pagination",clickable:!0},breakpoints:{320:{slidesPerView:1},499:{slidesPerView:2},991:{slidesPerView:3}}})}catch(e){}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiY2xvc2VNb2RhbCIsIiQiLCJkb2N1bWVudCIsImUiLCJjb2RlIiwib24iLCJwcmV2ZW50RGVmYXVsdCIsImF0dHIiLCJ0aGlzIiwiZGF0YSIsImFkZENsYXNzIiwid2lkdGgiLCJyZW1vdmVDbGFzcyIsImZpbmQiLCJjbG9zZXN0IiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCIkdGhpcyIsImhpZGUiLCJpdGVtIiwibGlzdCIsIml0ZW1zIiwiY29udGVudCIsImJ1dHRvblRvcCIsInNjcm9sbCIsImZhZGVJbiIsInN0b3AiLCJmYWRlT3V0IiwicmVhZE1vcmVDb250ZW50IiwicmVhZE1vcmVCdG4iLCJzY3JvbGxUb3AiLCJyZWFkTW9yZUJ0bkJveCIsImFuaW1hdGUiLCJxdWVyeVNlbGVjdG9yIiwiZm9yRWFjaCIsInJlbW92ZSIsInNob3dUYWJDb250ZW50IiwidGFiQ29udGVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGFic0xpc3QiLCJ0YWJzIiwibG9vcCIsImF1dG9wbGF5IiwiZGlzYWJsZU9uSW50ZXJhY3Rpb24iLCJudW0iLCJwYXVzZU9uTW91c2VFbnRlciIsImFkZCIsImhpZGVUYWJDb250ZW50cyIsInBvc2l0aW9uIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwic3dpcGVyIiwiZW5hYmxlZCIsIlN3aXBlciIsInRhYmxlU3dpcGVyIiwiZGVsYXkiLCJzcGFjZUJldHdlZW4iLCJlbCIsImNsaWNrYWJsZSIsInByZXZFbCIsIm5hdmlnYXRpb24iLCJuZXh0RWwiLCJzbGlkZXNQZXJWaWV3Iiwia2V5Ym9hcmQiLCJtYXRlcmlhbHNTd2lwZXIiLCJicmVha3BvaW50cyIsIjQ5OSIsInNwYWNlQmV0d2VlblNsaWRlcyIsIjk5OSIsInBhZ2luYXRpb24iLCIzMjAiLCI5OTEiLCJlcnJvciJdLCJtYXBwaW5ncyI6ImFBQUFBLE9B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bGUiOiJzY3JpcHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICAgIGZ1bmN0aW9uIGNsb3NlTW9kYWwoKSB7XG4gICAgICAgICQoXCIucG9wdXBcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICQoXCJib2R5XCIpLm9mZignY2xpY2snKTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSkgPT4ge1xuICAgICAgICBpZiAoZS5jb2RlID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgICAgICBjbG9zZU1vZGFsKCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvL1BvcC11cFxuICAgICQoXCIuanMtb3BlblwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIGF0dHIgPSAkKHRoaXMpLmRhdGEoXCJhdHRyXCIpO1xuICAgICAgICBjbG9zZU1vZGFsKCk7XG4gICAgICAgICQoYXR0cikuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgfSk7XG5cbiAgICAkKFwiLmpzLWNsb3NlXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjbG9zZU1vZGFsKCk7XG4gICAgfSk7XG5cbiAgICAvL9C80LXQvdGOXG5cbiAgICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCQod2luZG93KS53aWR0aCgpID4gNzY3KSB7XG4gICAgICAgICAgICAkKFwiLm1lbnVfX2l0ZW1cIikucmVtb3ZlQ2xhc3MoXCJvcGVuZWRcIik7XG4gICAgICAgICAgICAkKFwiLm1lbnVfX2JveFwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICQoXCIuc3ViLW1lbnVfX2xpc3RcIikuYXR0cihcInN0eWxlXCIsIFwiXCIpO1xuICAgICAgICAgICAgJChcImh0bWxcIikucmVtb3ZlQ2xhc3MoXCJodG1sLW92ZXJcIik7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgICQoXCIuaGFtYnVyZ2VyXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoXCIubWVudVwiKS5maW5kKFwiLm1lbnVfX2JveFwiKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgJChcImh0bWxcIikuYWRkQ2xhc3MoXCJodG1sLW92ZXJcIik7XG4gICAgfSk7XG4gICAgJChcIi5tZW51X19jbG9zZVwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgJCh0aGlzKS5jbG9zZXN0KFwiLm1lbnVfX2JveFwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgJChcImh0bWxcIikucmVtb3ZlQ2xhc3MoXCJodG1sLW92ZXJcIik7XG4gICAgfSk7XG5cblx0JChcIi5wb3B1cFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICQoXCJib2R5XCIpLm9uKCBcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwXCIpKSB7XG4gICAgICAgICAgICAgICAgY2xvc2VNb2RhbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8v0L4g0L3QsNGBINC+0YLQutGA0YvRgtC40LUg0L3QsCDQvNC+0LEg0LLQtdGA0YHQuNC4XG5cbiAgICAkKFwiLmpzLW1vcmVcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICQodGhpcylcbiAgICAgICAgICAgIC5jbG9zZXN0KFwiLmpzLXNob3dcIilcbiAgICAgICAgICAgIC5maW5kKFwiLmFib3V0X19jb250YWluZXJcIilcbiAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgJCh0aGlzKS5oaWRlKCk7XG4gICAgfSk7XG5cbiAgICAvL2ZhcVxuICAgICQoXCIuZmFxX19oZWFkZXJcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyksXG4gICAgICAgICAgICBpdGVtID0gJHRoaXMuY2xvc2VzdChcIi5mYXFfX2l0ZW1cIik7XG4gICAgICAgIChsaXN0ID0gJHRoaXMuY2xvc2VzdChcIi5mYXFfX2xpc3RcIikpLFxuICAgICAgICAgICAgKGl0ZW1zID0gbGlzdC5maW5kKFwiLmZhcV9faXRlbVwiKSksXG4gICAgICAgICAgICAoY29udGVudCA9IGl0ZW0uZmluZChcIi5mYXFfX2Ryb3Bkb3duXCIpKSxcbiAgICAgICAgICAgIChvdGhlckNvbnRlbnQgPSBsaXN0LmZpbmQoXCIuZmFxX19kcm9wZG93blwiKSksXG4gICAgICAgICAgICAoZHVyYXRpb24gPSAzMDApO1xuXG4gICAgICAgIGlmICghaXRlbS5oYXNDbGFzcyhcImFjdGl2ZVwiKSkge1xuICAgICAgICAgICAgaXRlbXMucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICBpdGVtLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaXRlbS5zdG9wKHRydWUsIHRydWUpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAvL1RPVE9QXG4gICAgdmFyIHRvcFNob3cgPSAyMDAsXG4gICAgICAgIGRlbGF5ID0gMTUwMCxcbiAgICAgICAgYnV0dG9uVG9wID0gJChcIi51cFwiKTtcbiAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCQodGhpcykuc2Nyb2xsVG9wKCkgPiB0b3BTaG93KSB7XG4gICAgICAgICAgICBidXR0b25Ub3AuZmFkZUluKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBidXR0b25Ub3AuZmFkZU91dCgpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBidXR0b25Ub3Aub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoXCJodG1sLCBib2R5XCIpLmFuaW1hdGUoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2Nyb2xsVG9wOiAwLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlbGF5XG4gICAgICAgICk7XG4gICAgfSk7XG5cbiAgICAvL1JFQUQtTU9SRVxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlYWRNb3JlQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVhZC1tb3JlX19jb250ZW50XCIpLFxuICAgICAgICAgICAgcmVhZE1vcmVCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJlYWQtbW9yZV9fYnRuXCIpLFxuICAgICAgICAgICAgcmVhZE1vcmVCdG5Cb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJlYWQtbW9yZV9fYnRuLWJveFwiKTtcbiAgICAgICAgaWYgKHJlYWRNb3JlQnRuKSB7XG4gICAgICAgICAgICByZWFkTW9yZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgcmVhZE1vcmVCdG5Cb3gucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgcmVhZE1vcmVDb250ZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJyZWFkLW1vcmVfX2hpZGVcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7fVxuXG4gICAgLy9UQUJTXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdGFiQ29udGVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgICAgICAgICAgIFwiLmluZGV4LW5ld3NfX3RhYi1jb250ZW50XCJcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJzTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW5kZXgtbmV3c19fdGFic1wiKSxcbiAgICAgICAgICAgIHRhYnMgPSB0YWJzTGlzdC5xdWVyeVNlbGVjdG9yQWxsKFwiLmluZGV4LW5ld3NfX3RhYlwiKTtcblxuICAgICAgICBmdW5jdGlvbiBoaWRlVGFiQ29udGVudHMoKSB7XG4gICAgICAgICAgICB0YWJDb250ZW50cy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgLy9pdGVtLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIlxuICAgICAgICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZChcImhpZGVcIik7XG4gICAgICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiLCBcImZhZGVcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRhYnMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNob3dUYWJDb250ZW50KHBvc2l0aW9uID0gMCkge1xuICAgICAgICAgICAgLy8gdGFiQ29udGVudHNbcG9zaXRpb25dLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgICB0YWJDb250ZW50c1twb3NpdGlvbl0uY2xhc3NMaXN0LmFkZChcInNob3dcIiwgXCJmYWRlXCIpO1xuICAgICAgICAgICAgdGFiQ29udGVudHNbcG9zaXRpb25dLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRlXCIpO1xuICAgICAgICAgICAgdGFic1twb3NpdGlvbl0uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICB0YWJzTGlzdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0O1xuICAgICAgICAgICAgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJpbmRleC1uZXdzX190YWJcIikpIHtcbiAgICAgICAgICAgICAgICB0YWJzLmZvckVhY2goKGl0ZW0sIG51bSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbSA9PSB0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGVUYWJDb250ZW50cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd1RhYkNvbnRlbnQobnVtKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge31cblxuICAgIC8vU1dJUEVSXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3Qgc3dpcGVyID0gbmV3IFN3aXBlcihcIi5tYWluLXN3aXBlclwiLCB7XG4gICAgICAgICAgICAvLyBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gICAgICAgICAgICBsb29wOiB0cnVlLFxuICAgICAgICAgICAgYXV0b3BsYXk6IHtcbiAgICAgICAgICAgICAgICBkZWxheTogNTAwMCxcbiAgICAgICAgICAgICAgICBkaXNhYmxlT25JbnRlcmFjdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwYXVzZU9uTW91c2VFbnRlcjogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgICAgICAgICAgZWw6IFwiLnN3aXBlci1wYWdpbmF0aW9uXCIsXG4gICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGtleWJvYXJkOiB7XG4gICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBuYXZpZ2F0aW9uOiB7XG4gICAgICAgICAgICAgICAgbmV4dEVsOiBcIi5zd2lwZXItYnV0dG9uLW5leHRcIixcbiAgICAgICAgICAgICAgICBwcmV2RWw6IFwiLnN3aXBlci1idXR0b24tcHJldlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgdGFibGVTd2lwZXIgPSBuZXcgU3dpcGVyKFwiLnRhYmxlLXN3aXBlclwiLCB7XG4gICAgICAgICAgICAvLyBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gICAgICAgICAgICBsb29wOiBmYWxzZSxcbiAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMzAsXG4gICAgICAgICAgICBrZXlib2FyZDoge1xuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbmF2aWdhdGlvbjoge1xuICAgICAgICAgICAgICAgIG5leHRFbDogXCIuc3dpcGVyLWJ1dHRvbi1uZXh0XCIsXG4gICAgICAgICAgICAgICAgcHJldkVsOiBcIi5zd2lwZXItYnV0dG9uLXByZXZcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBicmVha3BvaW50czoge1xuICAgICAgICAgICAgICAgIC8vIHdoZW4gd2luZG93IHdpZHRoIGlzIDw9IDQ5OXB4XG4gICAgICAgICAgICAgICAgNDk5OiB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgICAgICAgICAgICAgICAgIHNwYWNlQmV0d2VlblNsaWRlczogNTAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAvLyB3aGVuIHdpbmRvdyB3aWR0aCBpcyA8PSA5OTlweFxuICAgICAgICAgICAgICAgIDk5OToge1xuICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0RWw6IFwiLnN3aXBlci1idXR0b24tbmV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldkVsOiBcIi5zd2lwZXItYnV0dG9uLXByZXZcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgbWF0ZXJpYWxzU3dpcGVyID0gbmV3IFN3aXBlcihcIi5tYXRlcmlhbHMtc3dpcGVyXCIsIHtcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXG4gICAgICAgICAgICBzcGFjZUJldHdlZW46IDIwLFxuICAgICAgICAgICAgbG9vcDogdHJ1ZSxcbiAgICAgICAgICAgIGtleWJvYXJkOiB7XG4gICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBuYXZpZ2F0aW9uOiB7XG4gICAgICAgICAgICAgICAgbmV4dEVsOiBcIi5zd2lwZXItYnV0dG9uLW5leHRcIixcbiAgICAgICAgICAgICAgICBwcmV2RWw6IFwiLnN3aXBlci1idXR0b24tcHJldlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBhZ2luYXRpb246IHtcbiAgICAgICAgICAgICAgICBlbDogXCIuc3dpcGVyLXBhZ2luYXRpb25cIixcbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYnJlYWtwb2ludHM6IHtcbiAgICAgICAgICAgICAgICAvLyB3aGVuIHdpbmRvdyB3aWR0aCBpcyA8PSA0OTlweFxuICAgICAgICAgICAgICAgIDMyMDoge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAxLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgNDk5OiB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDIsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICA5OTE6IHtcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHt9XG59KTtcbiJdfQ==